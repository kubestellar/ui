name: Build, Check Formatting, and Run Tests

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  frontend:
    name: Frontend Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/npm-lock.yaml

      - name: Setup PNPM
        uses: npm install -g pnpm@9
  
      - name: Install Dependencies
        working-directory: frontend
        run: pnpm install --frozen-lockfile

      - name: Check Formatting
        working-directory: frontend
        run: pnpm run format:check
      - name: ✅ Formatting Check Passed
        if: success()
        run: echo "Prettier formatting check passed ✅"

      - name: Lint Check
        working-directory: frontend
        run: pnpm run lint
      - name: ✅ Lint Check Passed
        if: success()
        run: echo "Linting successful ✅"

      - name: Run Frontend Tests
        working-directory: frontend
        run: pnpm test -- --ci --coverage --passWithNoTests
      - name: ✅ Frontend Tests Passed
        if: success()
        run: echo "Frontend tests passed ✅"

      - name: Build
        working-directory: frontend
        run: pnpm run build
        env:
          VITE_BASE_URL: http://localhost:4000
      - name: ✅ Frontend Build Successful
        if: success()
        run: echo "Frontend build successful ✅"

      - name: Run Frontend
        working-directory: frontend
        run: |
          echo "Starting Frontend Server..."
          pnpm run dev &
        env:
          VITE_BASE_URL: http://localhost:4000
      - name: ✅ Frontend Server Started
        if: success()
        run: echo "Frontend server started successfully ✅"

  backend:
    name: Backend Checks
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
          cache-dependency-path: backend/go.sum

      - name: Install Dependencies
        working-directory: backend
        run: go mod download
      - name: ✅ Dependencies Installed
        if: success()
        run: echo "Go dependencies installed successfully ✅"

      - name: Check Go Formatting
        working-directory: backend
        run: |
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted correctly:"
            gofmt -l .
            exit 1
          fi
      - name: ✅ Formatting Check Passed
        if: success()
        run: echo "Go formatting check passed ✅"

      - name: Build Backend
        working-directory: backend
        run: go build -v ./...
      - name: ✅ Backend Build Successful
        if: success()
        run: echo "Backend build successful ✅"

      - name: Run Backend Tests
        working-directory: backend
        run: go test ./... -v
      - name: ✅ Backend Tests Passed
        if: success()
        run: echo "Backend Tests Passed ✅"

      - name: Run Backend
        working-directory: backend
        run: |
          echo "Starting Backend Server..."
          go run . &
      - name: ✅ Backend Server Started
        if: success()
        run: echo "Backend server started successfully ✅"
