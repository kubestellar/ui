#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üîß Running Prettier on frontend files (excluding ignored files)..."
if [ -d "frontend" ]; then
  cd frontend && npx prettier --write --ignore-path .prettierignore . && cd ..
else
  echo "‚ö†Ô∏è frontend directory not found, skipping prettier"
fi

echo "üîç Running frontend lint checks..."
if [ -d "frontend" ]; then
  cd frontend && npm run lint && cd ..
else
  echo "‚ö†Ô∏è frontend directory not found, skipping lint"
fi

echo "üßπ Running gofmt on Go files (excluding vendor)..."
find . -type f -name '*.go' -not -path "./vendor/*" -print0 | xargs -0 -r gofmt -w

echo "üß™ Running golint on Go files (excluding vendor)..."
if command -v golint >/dev/null 2>&1; then
  find . -type f -name '*.go' -not -path "./vendor/*" -print0 | xargs -0 -r golint || echo "‚ÑπÔ∏è golint produced warnings (non-blocking)."
else
  echo "‚ö†Ô∏è golint not installed. Run: go install golang.org/x/lint/golint@latest"
fi

echo "üîí Running gosec for security checks (excluding vendor)..."
if command -v gosec >/dev/null 2>&1; then
  if go list ./... >/dev/null 2>&1; then
    gosec $(go list ./... | grep -v /vendor/) || echo "‚ö†Ô∏è gosec found issues."
  else
    echo "‚ÑπÔ∏è No Go modules found, skipping gosec"
  fi
else
  echo "‚ÑπÔ∏è gosec not installed. Run: go install github.com/securego/gosec/v2/cmd/gosec@latest"
fi

echo "‚úÖ All pre-commit checks"
